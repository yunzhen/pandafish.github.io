<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ssh免密登录遇到过的坑</title>
    <link href="/2022/12/19/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95%E8%AF%A6%E8%A7%A3/"/>
    <url>/2022/12/19/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95%E8%AF%A6%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="ssh免密登录原理"><a href="#ssh免密登录原理" class="headerlink" title="ssh免密登录原理"></a>ssh免密登录原理</h1><p>通过非对称密钥实现认证登录，可参考<br><a href="https://cloud.tencent.com/developer/article/1484468">ssh免密登录原理与实现</a><br><a href="https://zhuanlan.zhihu.com/p/241341815">SSH 原理和基本应用</a></p><ol><li>客户端和服务器都生成自己的密钥对</li><li>客户端将公钥写入服务器的authorized_keys</li><li>ssh server远程访问服务器，发送连接请求，并发送id_rsa.pub公钥，服务器在本地的authorized_keys中查找是否存在该公钥，如果存在，用该公钥对任意字符串加密发送回客户端，客户端使用本地的id_rsa解密发送回服务器，服务器验证两个字符串是否相同。</li></ol><h1 id="ssh免密的登录设置方法"><a href="#ssh免密的登录设置方法" class="headerlink" title="ssh免密的登录设置方法"></a>ssh免密的登录设置方法</h1><ol><li>进入当前账号的home目录，进入.ssh文件夹</li><li>ssh-keygen 生成密钥对，输入命令后一直回车即可</li><li>复制公钥到远程服务器的.ssh目录下的authorized_keys文件中，有三种方法：<ol><li>ssh-copy-id命令</li><li>scp命令</li><li>手工复制粘贴</li></ol></li></ol><h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><h2 id="非root账号"><a href="#非root账号" class="headerlink" title="非root账号"></a>非root账号</h2><ol><li>非root账号下设置ssh免密登录，使用ssh-copy-id命令会要求输入远程服务器的root密码，可通过手工复制粘贴解决。</li></ol><h2 id="root账号"><a href="#root账号" class="headerlink" title="root账号"></a>root账号</h2><p>root账号下设置ssh免密登录后，始终要求输入root密码。<br>解决思路：</p><ol><li>检查本地生成密钥的.ssh文件夹和远程服务器上公钥复制粘贴操作的.ssh文件夹是否都是&#x2F;root目录下的。我刚开始是把登录账号的.ssh目录和root账号的.ssh目录混在了一起。注意，在某账号下ssh server1相当于ssh 账号名@server1，不同账号的远程登录目录不一样，检索的位置就不一样。</li><li>检查etc&#x2F;ssh&#x2F;sshd_config配置，DenyUsers root, DenyGroups root这两行代表禁止通过远程访问根用户，需要注释掉。其它的配置也需要检查。这里我粘贴一下我最终的配置。<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#$OpenBSD: sshd_config,v 1.100 2016/08/15 12:32:04 naddy Exp $</span><br><br><span class="hljs-comment"># This is the sshd server system-wide configuration file.  See</span><br><span class="hljs-comment"># sshd_config(5) for more information.</span><br><br><span class="hljs-comment"># This sshd was compiled with PATH=/usr/local/bin:/usr/bin</span><br><br><span class="hljs-comment"># The strategy used for options in the default sshd_config shipped with</span><br><span class="hljs-comment"># OpenSSH is to specify options with their default value where</span><br><span class="hljs-comment"># possible, but leave them commented.  Uncommented options override the</span><br><span class="hljs-comment"># default value.</span><br><br><span class="hljs-comment"># If you want to change the port on a SELinux system, you have to tell</span><br><span class="hljs-comment"># SELinux about this change.</span><br><span class="hljs-comment"># semanage port -a -t ssh_port_t -p tcp #PORTNUMBER</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#Port 22</span><br><span class="hljs-comment">#AddressFamily any</span><br><span class="hljs-comment">#ListenAddress 0.0.0.0</span><br><span class="hljs-comment">#ListenAddress ::</span><br><br>HostKey /etc/ssh/ssh_host_rsa_key<br><span class="hljs-comment">#HostKey /etc/ssh/ssh_host_dsa_key</span><br>HostKey /etc/ssh/ssh_host_ecdsa_key<br>HostKey /etc/ssh/ssh_host_ed25519_key<br><br><span class="hljs-comment"># Ciphers and keying</span><br><span class="hljs-comment">#RekeyLimit default none</span><br><br><span class="hljs-comment"># Logging</span><br><span class="hljs-comment">#SyslogFacility AUTH</span><br>SyslogFacility AUTHPRIV<br>LogLevel <span class="hljs-built_in">INFO</span><br><br><span class="hljs-comment"># Authentication:</span><br><br>LoginGraceTime 60<br>PermitRootLogin <span class="hljs-literal">yes</span><br><span class="hljs-comment">#StrictModes yes</span><br>MaxAuthTries 4<br><span class="hljs-comment">#MaxSessions 10</span><br><br>PubkeyAuthentication <span class="hljs-literal">yes</span><br><br><span class="hljs-comment"># The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2</span><br><span class="hljs-comment"># but this is overridden so installations will only check .ssh/authorized_keys</span><br>AuthorizedKeysFile.ssh/authorized_keys<br><br><span class="hljs-comment">#AuthorizedPrincipalsFile none</span><br><br><span class="hljs-comment">#AuthorizedKeysCommand none</span><br><span class="hljs-comment">#AuthorizedKeysCommandUser nobody</span><br><br><span class="hljs-comment"># For this to work you will also need host keys in /etc/ssh/ssh_known_hosts</span><br>HostbasedAuthentication <span class="hljs-literal">no</span><br><span class="hljs-comment"># Change to yes if you don&#x27;t trust ~/.ssh/known_hosts for</span><br><span class="hljs-comment"># HostbasedAuthentication</span><br><span class="hljs-comment">#IgnoreUserKnownHosts no</span><br><span class="hljs-comment"># Don&#x27;t read the user&#x27;s ~/.rhosts and ~/.shosts files</span><br>IgnoreRhosts <span class="hljs-literal">yes</span><br><br><span class="hljs-comment"># To disable tunneled clear text passwords, change to no here!</span><br><span class="hljs-comment">#PasswordAuthentication yes</span><br>PermitEmptyPasswords <span class="hljs-literal">no</span><br>PasswordAuthentication <span class="hljs-literal">yes</span><br><br><span class="hljs-comment"># Change to no to disable s/key passwords</span><br><span class="hljs-comment">#ChallengeResponseAuthentication yes</span><br>ChallengeResponseAuthentication <span class="hljs-literal">yes</span><br><br><span class="hljs-comment"># Kerberos options</span><br><span class="hljs-comment">#KerberosAuthentication no</span><br><span class="hljs-comment">#KerberosOrLocalPasswd yes</span><br><span class="hljs-comment">#KerberosTicketCleanup yes</span><br><span class="hljs-comment">#KerberosGetAFSToken no</span><br><span class="hljs-comment">#KerberosUseKuserok yes</span><br><br><span class="hljs-comment"># GSSAPI options</span><br>GSSAPIAuthentication <span class="hljs-literal">yes</span><br>GSSAPICleanupCredentials <span class="hljs-literal">no</span><br><span class="hljs-comment">#GSSAPIStrictAcceptorCheck yes</span><br><span class="hljs-comment">#GSSAPIKeyExchange no</span><br><span class="hljs-comment">#GSSAPIEnablek5users no</span><br><br><span class="hljs-comment"># Set this to &#x27;yes&#x27; to enable PAM authentication, account processing,</span><br><span class="hljs-comment"># and session processing. If this is enabled, PAM authentication will</span><br><span class="hljs-comment"># be allowed through the ChallengeResponseAuthentication and</span><br><span class="hljs-comment"># PasswordAuthentication.  Depending on your PAM configuration,</span><br><span class="hljs-comment"># PAM authentication via ChallengeResponseAuthentication may bypass</span><br><span class="hljs-comment"># the setting of &quot;PermitRootLogin without-password&quot;.</span><br><span class="hljs-comment"># If you just want the PAM account and session checks to run without</span><br><span class="hljs-comment"># PAM authentication, then enable this but set PasswordAuthentication</span><br><span class="hljs-comment"># and ChallengeResponseAuthentication to &#x27;no&#x27;.</span><br><span class="hljs-comment"># WARNING: &#x27;UsePAM no&#x27; is not supported in Red Hat Enterprise Linux and may cause several</span><br><span class="hljs-comment"># problems.</span><br>UsePAM <span class="hljs-literal">yes</span><br><br><span class="hljs-comment">#AllowAgentForwarding yes</span><br><span class="hljs-comment">#AllowTcpForwarding yes</span><br><span class="hljs-comment">#GatewayPorts no</span><br>X11Forwarding <span class="hljs-literal">no</span><br><span class="hljs-comment">#X11DisplayOffset 10</span><br><span class="hljs-comment">#X11UseLocalhost yes</span><br><span class="hljs-comment">#PermitTTY yes</span><br><span class="hljs-comment">#PrintMotd yes</span><br><span class="hljs-comment">#PrintLastLog yes</span><br><span class="hljs-comment">#TCPKeepAlive yes</span><br><span class="hljs-comment">#UseLogin no</span><br><span class="hljs-comment">#UsePrivilegeSeparation sandbox</span><br>PermitUserEnvironment <span class="hljs-literal">no</span><br><span class="hljs-comment">#Compression delayed</span><br>ClientAliveInterval 600<br>ClientAliveCountMax 0<br><span class="hljs-comment">#ShowPatchLevel no</span><br><span class="hljs-comment">#UseDNS yes</span><br><span class="hljs-comment">#PidFile /var/run/sshd.pid</span><br><span class="hljs-comment">#MaxStartups 10:30:100</span><br><span class="hljs-comment">#PermitTunnel no</span><br><span class="hljs-comment">#ChrootDirectory none</span><br><span class="hljs-comment">#VersionAddendum none</span><br><br><span class="hljs-comment"># no default banner path</span><br>Banner /etc/issue.net<br><br><span class="hljs-comment"># Accept locale-related environment variables</span><br>AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES<br>AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT<br>AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE<br>AcceptEnv XMODIFIERS<br><br><span class="hljs-comment"># override default of no subsystems</span><br>Subsystemsftp/usr/libexec/openssh/sftp-server<br><br><span class="hljs-comment"># Example of overriding settings on a per-user basis</span><br><span class="hljs-comment">#Match User anoncvs</span><br><span class="hljs-comment">#X11Forwarding no</span><br><span class="hljs-comment">#AllowTcpForwarding no</span><br><span class="hljs-comment">#PermitTTY no</span><br><span class="hljs-comment">#ForceCommand cvs server</span><br>Ciphers 隐藏<br><span class="hljs-comment"># DenyUsers root</span><br><span class="hljs-comment"># DenyGroups root</span><br>AllowTcpForwarding <span class="hljs-literal">no</span><br>MaxStartups 10:30:60<br>MaxSessions 4<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Cluster Deployment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建Flink高可用集群(standalone deployment）</title>
    <link href="/2022/12/18/Flink%E9%83%A8%E7%BD%B21/"/>
    <url>/2022/12/18/Flink%E9%83%A8%E7%BD%B21/</url>
    
    <content type="html"><![CDATA[<p>服务器操作系统：centos7<br>本机操作系统：Mac<br>flink version: 1.15<br>jdk version: java11<br>HA service: Zookeeper<br>File System: NFS<br>资源分配：</p><table><thead><tr><th>ip</th><th>hostname</th><th>role</th></tr></thead><tbody><tr><td>10.250.0.1</td><td>main0</td><td>JM</td></tr><tr><td>10.250.0.2</td><td>main1</td><td>JM</td></tr><tr><td>10.250.0.3</td><td>main2</td><td>JM</td></tr><tr><td>10.250.0.4</td><td>worker1</td><td>TM</td></tr><tr><td>10.250.0.5</td><td>worker2</td><td>TM</td></tr></tbody></table><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><p>远程登录工具：iTerm<br>远程登录5台服务器，⌘(command) + ⇧(shift) + i快捷键同时操作它们。若登录账号非root账号，建议切换为root账号</p><h2 id="关闭SeLinux"><a href="#关闭SeLinux" class="headerlink" title="关闭SeLinux"></a>关闭SeLinux</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">setenforce 0</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">sed -i --follow-symlinks <span class="hljs-string">&#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27;</span> /etc/sysconfig/selinux</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">reboot</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">sestatus</span><br></code></pre></td></tr></table></figure><h2 id="配置hostname"><a href="#配置hostname" class="headerlink" title="配置hostname"></a>配置hostname</h2><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">$ hostnamectl set-hostname main0 #main1,main2,worker1~<span class="hljs-number">2</span><br>$ hostnamectl status<br>$ vi /etc/hosts <br>$ cat /etc/hosts<br><span class="hljs-number">127.0.0.1</span> localhost localhost.localdomain localhost4 localhost4.localdomain4<br>::<span class="hljs-number">1</span> localhost localhost.localdomain localhost6 localhost6.localdomain6<br><span class="hljs-number">10.250.0.1</span>: main0<br><span class="hljs-number">10.250.0.2</span>: main1<br><span class="hljs-number">10.250.0.3</span>: main2<br><span class="hljs-number">10.250.0.4</span>: worker1<br><span class="hljs-number">10.250.0.5</span>: worker2<br></code></pre></td></tr></table></figure><h2 id="同步时间"><a href="#同步时间" class="headerlink" title="同步时间"></a>同步时间</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$ </span>yum install ntp -y<br><span class="hljs-variable">$ </span>crontab -e<br><span class="hljs-variable">$ </span>crontab -l<br><span class="hljs-number">0</span> * * * * <span class="hljs-regexp">/usr/sbin</span><span class="hljs-regexp">/ntpdate cn.pool.ntp.org</span><br></code></pre></td></tr></table></figure><h2 id="配置ssh免密登录"><a href="#配置ssh免密登录" class="headerlink" title="配置ssh免密登录"></a>配置ssh免密登录</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-comment"># 1. 生成密钥</span><br><span class="hljs-variable">$ </span>ssh-keygen<br><span class="hljs-comment"># 2. 复制各自的公钥到其它服务器的authorized_key</span><br><span class="hljs-variable">$ </span>ssh-copy-id -i ~<span class="hljs-regexp">/.ssh/id</span>_rsa.pub main0 <span class="hljs-comment">#main1,main2,worker1~2</span><br></code></pre></td></tr></table></figure><p>关于复制公钥涉及到服务器之间的相互访问，可能会要求你输入root账号的密码，如果不知道可以通过手工复制粘贴代替ssh-copy-id命令。<br>之后会单独写一篇博文介绍ssh免密登录的理论知识和我遇到过的各种问题。</p><h2 id="安装Java11"><a href="#安装Java11" class="headerlink" title="安装Java11"></a>安装Java11</h2><p>安装flink之前需要装好java，1.15之后的版本只支持java11，不再支持java8.</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">$ yum search <span class="hljs-keyword">java|grep </span><span class="hljs-keyword">jdk</span><br><span class="hljs-keyword"></span>$ yum <span class="hljs-keyword">install </span>-y <span class="hljs-keyword">java-11-openjdk</span><br><span class="hljs-keyword"></span>$ yum <span class="hljs-keyword">install </span><span class="hljs-keyword">java-11-openjdk-devel </span>-y<br>$ <span class="hljs-keyword">java </span>-version<br></code></pre></td></tr></table></figure><h1 id="Zookeeper-HA-服务环境准备"><a href="#Zookeeper-HA-服务环境准备" class="headerlink" title="Zookeeper HA 服务环境准备"></a>Zookeeper HA 服务环境准备</h1><h2 id="Zookeeper集群搭建"><a href="#Zookeeper集群搭建" class="headerlink" title="Zookeeper集群搭建"></a>Zookeeper集群搭建</h2><p>Standalone部署模式下的flink集群只支持zookeeper高可用服务，所以若要部署Jobmanager高可用，必须部署zookeeper。<br>我选择将所有安装包都安装在&#x2F;opt目录下<br>zookeeper只涉及到前三台服务器，因此以下操作仅用于前三台服务器（main0,main1,main2)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> /opt</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">wget https://dlcdn.apache.org/zookeeper/zookeeper-3.7.1/apache-zookeeper-3.7.1-bin.tar.gz --no-check-certificate</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">tar -xzf apache-zookeeper-3.7.1-bin.tar.gz<span class="hljs-string">&#x27;</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">重命名</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-string">mv apache-zookeeper-3.7.1 zookeeper</span></span><br></code></pre></td></tr></table></figure><p>进入解压后的目录，修改配置文件zoo.cfg（默认只有zoo_sample.cfg，zoo.cfg需要自建）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># The number of milliseconds of each tick</span><br><span class="hljs-string">tickTime=2000</span><br><span class="hljs-comment"># The number of ticks that the initial</span><br><span class="hljs-comment"># synchronization phase can take</span><br><span class="hljs-string">initLimit=10</span><br><span class="hljs-comment"># The number of ticks that can pass between</span><br><span class="hljs-comment"># sending a request and getting an acknowledgement</span><br><span class="hljs-string">syncLimit=5</span><br><span class="hljs-comment"># the directory where the snapshot is stored.</span><br><span class="hljs-comment"># do not use /tmp for storage, /tmp here is just</span><br><span class="hljs-comment"># example sakes.</span><br><span class="hljs-string">dataDir=/opt/zookeeper/data</span><br><span class="hljs-string">dataLogDir=/opt/zookeeper/logs</span><br><span class="hljs-comment"># the port at which the clients will connect</span><br><span class="hljs-string">clientPort=2181</span><br><span class="hljs-comment"># the maximum number of client connections.</span><br><span class="hljs-comment"># increase this if you need to handle more clients</span><br><span class="hljs-comment">#maxClientCnxns=60</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Be sure to read the maintenance section of the</span><br><span class="hljs-comment"># administrator guide before turning on autopurge.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># The number of snapshots to retain in dataDir</span><br><span class="hljs-comment">#autopurge.snapRetainCount=3</span><br><span class="hljs-comment"># Purge task interval in hours</span><br><span class="hljs-comment"># Set to &quot;0&quot; to disable auto purge feature</span><br><span class="hljs-comment">#autopurge.purgeInterval=1</span><br><br><span class="hljs-comment">## Metrics Providers</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># https://prometheus.io Metrics Exporter</span><br><span class="hljs-comment">#metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider</span><br><span class="hljs-comment">#metricsProvider.httpPort=7000</span><br><span class="hljs-comment">#metricsProvider.exportJvmInfo=true</span><br><span class="hljs-string">server.1=10.250.0.1:2888:3888</span><br><span class="hljs-string">server.2=10.250.0.2:2888:3888</span><br><span class="hljs-string">server.3=10.250.0.3:2888:3888</span><br></code></pre></td></tr></table></figure><p>进入配置文件中定义的dataDir目录，创建myid文件，在myid文件中写入各自的id。配置文件中server.1&#x3D;10.250.0.1:2888:3888里面的server.1 1就是id号。因此myid文件分别写入1，2，3即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> /opt/zookeeper/data</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">vi myid</span><br>  1  # 三台机器不一样，其它为2，3<br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">nohup</span> bin/zkServer.sh start &gt;&gt; /dev/null 2&gt;&amp;1 &amp;</span><br></code></pre></td></tr></table></figure><p>启动后可通过 ps -aux|grep zkServer 命令查看进程是否启动成功。<br>也可以通过jps命令查看是否有QuorumPeerMain进程<br>启动失败可以进入&#x2F;opt&#x2F;zookeeper&#x2F;logs查看对应的log。我这边的失败原因有：myid配置目录和zoo.cfg文件中的dataDir不一致；端口被占用。</p><h2 id="NFS-配置"><a href="#NFS-配置" class="headerlink" title="NFS 配置"></a>NFS 配置</h2><p>之所以配置NFS是因为配置Flink的zookeeper HA 服务需要配置可共享的文件存储（High-availability.storageDir must be a durable file system that is accessible from all nodes）官方示例给的hdfs，但是考虑到hdfs太笨重，我们的任务量也不大，我选择了更轻量的NFS。我的NFS服务是直接向同事申请的，同事提供了远程目录，我直接挂载到我的三台jobmanager服务器的&#x2F;mnt&#x2F;flink&#x2F;ha&#x2F;位置，之后这个目录就将配置为flink中的High-availability.storageDir</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">rpm -qa|grep nfs</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">rpm -qa|grep rpc</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-keyword">if</span> not installed, install nfs</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">yum -y install nfs-utils rpcbind</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">verify</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">rpm -qa nfs-utils rpcbind</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">moutn <span class="hljs-built_in">local</span> <span class="hljs-built_in">dir</span> to remote <span class="hljs-built_in">dir</span></span><br>mount -t nfs -o nolock 远程目录 /mnt/flink/ha/<br></code></pre></td></tr></table></figure><h1 id="Flink-集群部署与配置"><a href="#Flink-集群部署与配置" class="headerlink" title="Flink 集群部署与配置"></a>Flink 集群部署与配置</h1><p>下面操作对象为所有服务器</p><h2 id="下载并解压"><a href="#下载并解压" class="headerlink" title="下载并解压"></a>下载并解压</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> /opt</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">wget https://dlcdn.apache.org/flink/flink-1.15.2/flink-1.15.2-bin-scala_2.12.tgz --no-check-certificate</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">tar -xzf flink-*.tgz</span><br></code></pre></td></tr></table></figure><h2 id="Configure-masters-in-conf-x2F-masters"><a href="#Configure-masters-in-conf-x2F-masters" class="headerlink" title="Configure masters in conf&#x2F;masters:"></a>Configure masters in conf&#x2F;masters:</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">main0</span>:<span class="hljs-number">8081</span><br><span class="hljs-attribute">main1</span>:<span class="hljs-number">8081</span><br><span class="hljs-attribute">main2</span>:<span class="hljs-number">8081</span><br></code></pre></td></tr></table></figure><h2 id="Configure-workers-in-conf-x2F-workers"><a href="#Configure-workers-in-conf-x2F-workers" class="headerlink" title="Configure workers in conf&#x2F;workers:"></a>Configure workers in conf&#x2F;workers:</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">worker1</span><br>worker2<br></code></pre></td></tr></table></figure><h2 id="配置-conf-x2F-flink-conf-yaml"><a href="#配置-conf-x2F-flink-conf-yaml" class="headerlink" title="配置 conf&#x2F;flink-conf.yaml"></a>配置 conf&#x2F;flink-conf.yaml</h2><p>完整文件太长，不同机器不完全一样，下面仅列出worker1的配置项（去除了注释）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">jobmanager.rpc.address:</span> <span class="hljs-string">localhost</span><br><span class="hljs-attr">jobmanager.rpc.port:</span> <span class="hljs-number">6123</span><br><span class="hljs-attr">jobmanager.bind-host:</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><br><span class="hljs-attr">jobmanager.memory.process.size:</span> <span class="hljs-string">1600m</span><br><span class="hljs-attr">taskmanager.bind-host:</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><br><span class="hljs-attr">taskmanager.host:</span> <span class="hljs-string">worker1(服务器worker2上写worker2)</span><br><span class="hljs-attr">taskmanager.memory.process.size:</span> <span class="hljs-string">8192m</span><br><span class="hljs-attr">taskmanager.memory.managed.size:</span> <span class="hljs-string">0m</span><br><span class="hljs-attr">taskmanager.numberOfTaskSlots:</span> <span class="hljs-number">8</span><br><span class="hljs-attr">parallelism.default:</span> <span class="hljs-number">1</span><br><span class="hljs-attr">high-availability:</span> <span class="hljs-string">zookeeper</span><br><span class="hljs-attr">high-availability.storageDir:</span> <span class="hljs-string">file:///mnt/flink/ha/</span><br><span class="hljs-attr">high-availability.zookeeper.quorum:</span> <span class="hljs-string">main0:2181,main1:2181,main2:2181</span><br><span class="hljs-attr">high-availability.zookeeper.path.root:</span> <span class="hljs-string">/opt/flink-1.15.2/cluster_nodes</span><br><span class="hljs-attr">high-availability.cluster-id:</span> <span class="hljs-string">/cluster_one</span><br><span class="hljs-attr">jobmanager.execution.failover-strategy:</span> <span class="hljs-string">region</span><br><span class="hljs-attr">rest.address:</span> <span class="hljs-string">localhost</span><br><span class="hljs-attr">rest.bind-address:</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><br></code></pre></td></tr></table></figure><h2 id="启动和关闭集群"><a href="#启动和关闭集群" class="headerlink" title="启动和关闭集群"></a>启动和关闭集群</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"># <span class="hljs-keyword">start</span> <span class="hljs-keyword">cluster</span><br>$ bin/<span class="hljs-keyword">start</span>-<span class="hljs-keyword">cluster</span>.sh<br># <span class="hljs-keyword">close</span> <span class="hljs-keyword">cluster</span><br>$ bin/stop-<span class="hljs-keyword">cluster</span>.sh<br></code></pre></td></tr></table></figure><p>开启集群后可以在10.250.0.1：8081上看到UI界面<br><img src="/2022/12/18/Flink%E9%83%A8%E7%BD%B21/2022-12-19-17-48-28.png"></p><p>启动集群后也可以关闭具体的某个taskmanager</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">bin/taskmanager.sh stop</span><br></code></pre></td></tr></table></figure><p>同一台机器可以启动多个taskmanager（前提是资源够）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$</span> bin/taskmanager.sh <span class="hljs-built_in">start</span><br></code></pre></td></tr></table></figure><h1 id="Flink集群功能测试"><a href="#Flink集群功能测试" class="headerlink" title="Flink集群功能测试"></a>Flink集群功能测试</h1><p>关掉或kill掉一个taskmanager，可以看到运行的任务重启在另一个taskmanager上。<br>关掉或kill掉当前的jobmanager leader，可以在另一个jobmanager的 UI界面上监测到任务从恢复点恢复。</p>]]></content>
    
    
    <categories>
      
      <category>Flink</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Flink</tag>
      
      <tag>Cluster Deployment</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
